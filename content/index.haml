.hero-unit
  %h1 Ruby AMQP
  %p
    Ruby amqp gem is a widely used, feature-rich, well-maintained, fast asynchronous AMQP 0.9.1 Ruby client with batteries included. Get started in an instant:
    %a{ :href => "http://bit.ly/jcuACj" }
      here
    , API reference is
    %a{ :href => "http://bit.ly/mDm1JE" }
      here
    , we do care about the docs!
  %p
    %a.btn.primary.large{ :href => "/articles/getting_started/"}
      Get Started!
.row
  .span6
    %h2 About
    %p
      Advanced Message Queuing Protocol is a standard wire-level protocol and semantic framework for high performance enterprise messaging.
    %h3
      From the AMQP website:
    %p
      AMQP is an Open Standard for Messaging Middleware.

    %p
      By complying to the AMQP standard, middleware products written for different platforms and in different languages can send messages to one another. AMQP addresses the problem of transporting value-bearing messages across and between organisations in a timely manner.

    %p
      AMQP enables complete interoperability for messaging middleware; both the networking protocol and the semantics of broker services are defined in AMQP.
  .span8
    %h2 Guides
    %dl
      %dt
        %a{ :href => "/articles/amqp_9_1_model_explained/"}
          AMQP 0.9.1 Model Explained.
      %dd
        A simple 2 page long introduction to the AMQP Model concepts and features. Understanding the AMQP Model will make a lot of other documentation, both for the Ruby amqp gem and RabbitMQ itself, easier to follow. With this guide, you donâ€™t have to waste hours of time reading the whole specification.

      %dt
        %a{ :href => "#"}
          Connection to the broker.
      %dd
        This guide explains how to connect to an AMQP broker and how to integrate the amqp gem into standalone and Web applications.

      %dt
        %a{ :href => "#"}
          Working With Queues.
      %dd
        This guide focuses on features that consumer applications use heavily.

      %dt
        %a{ :href => "#"}
          Working With Exchanges.
      %dd
        This guide focuses on features that producer applications use heavily.

      %dt
        %a{ :href => "#"}
          Patterns & Use Cases.
      %dd
        This guide focuses implementation of common messaging patterns using AMQP Model features as building blocks.

      %dt
        %a{ :href => "#"}
          Error Handling & Recovery.
      %dd
        This guide explains how to handle protocol errors, network failures and other things that may go wrong in real world projects.
